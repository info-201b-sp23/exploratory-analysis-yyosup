# Grouping the data by release_year and calculating aggregate values
grouped_data <- credits_title_data %>%
group_by(release_year) %>%
summarise(Average_IMDb_Score = round(mean(imdb_score), 1),
Total_IMDb_Votes = sum(imdb_votes, na.rm = TRUE),
Movie_Count = n()) %>%
arrange(desc(release_year)) %>%
ungroup()
# Renaming columns for better readability
colnames(grouped_data) <- c("Release Year", "Average IMDb Score", "Average IMDb Votes", "Movie Count")
# Displaying the table
grouped_data
votes_movie <- credits_title_data %>%
distinct(release_year) %>%
group_by(release_year) %>%
summarize(avg_imdb_votes = mean(imdb_votes, na.rm = TRUE))
votes_movie <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(avg_imdb_votes = sum(imdb_votes, na.rm = TRUE))
votes_movie <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(avg_imdb_votes = sum(imdb_votes, na.rm = TRUE))
# Calculate the sum of IMDb votes for distinct movies in each year
votes_per_year <- credits_title_data %>%
distinct(title, release_year) %>%
group_by(release_year) %>%
summarize(avg_imdb_votes = sum(imdb_votes, na.rm = TRUE))
votes_per_year <- credits_title_data %>%
distinct(title, release_year) %>%
group_by(release_year) %>%
summarize(avg_imdb_votes = sum(imdb_votes, na.rm = TRUE))
# Calculate the sum of IMDb votes for distinct movies in each year
votes_per_year <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(total_imdb_votes = sum(imdb_votes))
# Print the resulting table
print(votes_per_year)
# Calculate the sum of IMDb votes for distinct movies in each year
votes_per_year <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(total_imdb_votes = sum(imdb_votes))
# Calculate the sum of IMDb votes for distinct movies in each year
votes_per_year <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(total_imdb_votes = sum(imdb_votes))
# Calculate the sum of IMDb votes for distinct movies in each year
votes_per_year <- credits_title_data %>%
group_by(release_year) %>%
summarize(total_imdb_votes = sum(imdb_votes)) %>%
distinct(title)
# Calculate the sum of IMDb votes for distinct movies in each year
votes_per_year <- credits_title_data %>%
group_by(release_year) %>%
summarize(total_imdb_votes = sum(imdb_votes)) %>%
distinct(title)
# Calculate aggregate information
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Movies = n(),  # Number of movies in each release year
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),  # Average IMDb score rounded to 2 decimal places
Total_IMDb_Votes = round(sum(imdb_votes, na.rm = TRUE))  # Total IMDb votes rounded to the nearest whole number
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Movies", "Average IMDb Score", "Total IMDb Votes")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
View(release_year_agg)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(
Number_of_Movies = n(),  # Number of distinct movies in each release year
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),  # Average IMDb score rounded to 2 decimal places
Total_IMDb_Votes = round(sum(imdb_votes, na.rm = TRUE))  # Total IMDb votes rounded to the nearest whole number
) %>%
arrange(desc(Average_IMDb_Score))
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Movies = n(),  # Number of distinct movies in each release year
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),  # Average IMDb score rounded to 2 decimal places
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE))  # Total IMDb votes rounded to the nearest whole number
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Total IMDb Votes")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),  # Number of distinct movies in each release year
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),  # Average IMDb score rounded to 2 decimal places
Total_IMDb_Votes = round(sum(imdb_votes, na.rm = TRUE)),  # Total IMDb votes rounded to the nearest whole number
Highest_Rated_Movie = title[which.max(imdb_score)],  # Title of the highest rated movie in each release year
Actors_in_Highest_Rated_Movie = paste(unique(name[imdb_score == max(imdb_score)]), collapse = ", ")  # Actors in the highest rated movie
) %>%
arrange(desc(Average_IMDb_Score))
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),  # Number of distinct movies in each release year
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),  # Average IMDb score rounded to 2 decimal places
Total_IMDb_Votes = round(sum(imdb_votes, na.rm = TRUE)),  # Total IMDb votes rounded to the nearest whole number
Highest_Rated_Movie = title[which.max(imdb_score)],  # Title of the highest rated movie in each release year
Actors_in_Highest_Rated_Movie = paste(unique(name[imdb_score == max(imdb_score)]), collapse = ", ")  # Actors in the highest rated movie
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Total IMDb Votes", "Highest Rated Movie", "Actors")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
View(release_year_agg)
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = title[imdb_score == max(imdb_score)],
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie", "Actors")
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = title[imdb_score == max(imdb_score)[1]],
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie", "Actors")
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = title[imdb_score == max(imdb_score)][1],
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
View(release_year_agg)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = title[imdb_score == max(imdb_score)],
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
View(release_year_agg)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score)])
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
View(release_year_agg)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm =TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
# Format the table as a character string
formatted_table <- format(release_year_agg, justify = "left", digits = 2, scientific = FALSE)
# Print the formatted table
cat(formatted_table)
View(release_year_agg)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm =TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm =TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
print(release_year_agg)
View(release_year_agg)
# Filter the dataset for the year 1990 and count distinct movies
distinct_movies_1990 <- credits_title_data %>%
filter(release_year == 1990) %>%
distinct(title) %>%
summarize(Count = n())
# Print the result
cat("Number of distinct movies made in 1990:", distinct_movies_1990$Count)
release_year_agg <- credits_title_data %>%
distinct(title) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
release_year_agg <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
# Format the column names and round the quantitative values
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
print(release_year_agg)
View(release_year_agg)
# Filter the dataset for the year 1990 and count distinct movies
distinct_movies_1990 <- credits_title_data %>%
filter(release_year == 1990) %>%
distinct(title) %>%
summarize(Count = n())
# Print the result
cat("Number of distinct movies made in 1990:", distinct_movies_1990$Count)
# Filter the dataset for the year 1990 and count distinct movies
distinct_movies_1990 <- credits_title_data %>%
filter(release_year == 2000) %>%
distinct(title) %>%
summarize(Count = n())
# Print the result
cat("Number of distinct movies made in 1990:", distinct_movies_1990$Count)
library("dplyr")
library("stringr")
library("ggplot2")
library("tidyverse")
library("scales")
library("knitr")
library("dplyr")
library("stringr")
library("ggplot2")
library("tidyverse")
library("scales")
library("knitr")
#Read the csv files
credits_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/credits.csv", stringsAsFactors = FALSE)
titles_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/titles.csv", stringsAsFactors = FALSE)
#Join the two tables together
credits_title_data <- inner_join(titles_data, credits_data, by = "id")
#Delete the columns that are not necessary
credits_title_data <- select(credits_title_data, -description)
credits_title_data <- select(credits_title_data, -runtime)
credits_title_data <- select(credits_title_data, -genres)
credits_title_data <- select(credits_title_data, -production_countries)
credits_title_data <- select(credits_title_data, -tmdb_popularity)
credits_title_data <- select(credits_title_data, -tmdb_score)
release_year_agg <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
knitr::kable(release_year_agg)
release_year_agg <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
knitr::kable(release_year_agg)
release_year_agg <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
knitr::kable(release_year_agg)
library("dplyr")
library("stringr")
library("ggplot2")
library("tidyverse")
library("scales")
library("knitr")
#Read the csv files
credits_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/credits.csv", stringsAsFactors = FALSE)
titles_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/titles.csv", stringsAsFactors = FALSE)
#Join the two tables together
credits_title_data <- inner_join(titles_data, credits_data, by = "id")
#Delete the columns that are not necessary
credits_title_data <- select(credits_title_data, -description)
credits_title_data <- select(credits_title_data, -runtime)
credits_title_data <- select(credits_title_data, -genres)
credits_title_data <- select(credits_title_data, -production_countries)
credits_title_data <- select(credits_title_data, -tmdb_popularity)
credits_title_data <- select(credits_title_data, -tmdb_score)
release_year_agg <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
colnames(release_year_agg) <- c("Release Year", "Number of Distinct Movies", "Average IMDb Score", "Average IMDb Votes", "Highest Rated Movie")
knitr::kable(release_year_agg)
# Calculate aggregate information for distinct movies
release_year_agg <- credits_title_data %>%
distinct(title, .keep_all = TRUE) %>%
group_by(release_year) %>%
summarize(
Number_of_Distinct_Movies = n(),
Average_IMDb_Score = round(mean(imdb_score, na.rm = TRUE), 2),
Average_IMDb_Votes = round(mean(imdb_votes, na.rm = TRUE)),
Highest_Rated_Movie = first(title[imdb_score == max(imdb_score, na.rm = TRUE)])
) %>%
arrange(desc(Average_IMDb_Score))
library("dplyr")
library("stringr")
library("ggplot2")
library("tidyverse")
library("scales")
# Read the csv files
credits_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/credits.csv", stringsAsFactors = FALSE)
titles_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/titles.csv", stringsAsFactors = FALSE)
# Join the two tables together
credits_title_data <- inner_join(titles_data, credits_data, by = "id")
# Delete the columns that are not necessary
credits_title_data <- select(credits_title_data, -description)
credits_title_data <- select(credits_title_data, -runtime)
credits_title_data <- select(credits_title_data, -genres)
credits_title_data <- select(credits_title_data, -production_countries)
credits_title_data <- select(credits_title_data, -tmdb_popularity)
credits_title_data <- select(credits_title_data, -tmdb_score)
# Create a list to store summary information
summary_info <- list()
# Calculate the movies with the highest IMDb for each year
highest_IMDb_year <- credits_title_data %>%
group_by(release_year) %>%
filter(imdb_score == max(imdb_score, na.rm = TRUE)) %>%
select(release_year, title, imdb_score) %>%
distinct()
summary_info$num_observations <- nrow(credits_title_data)
summary_info$highest_IMDb_year <- highest_IMDb_year
# Calculate the movie with the highest IMDb score
highest_IMDb_alltime <- credits_title_data %>%
filter(imdb_score == max(imdb_score, na.rm = TRUE)) %>%
select(release_year, title, imdb_score) %>%
distinct()
summary_info$highest_IMDb_alltime <- highest_IMDb_alltime
# Find the actors who acted in the highest rated IMDb movies
max_imdb_score <- max(credits_title_data$imdb_score, na.rm = TRUE)
highest_imdb_movies <- credits_title_data %>%
filter(imdb_score == max_imdb_score)
actors <- unique(highest_imdb_movies$name)
summary_info$actors_highest_IMDb <- actors
# Calculate age certification/restriction and IMDb score of movies
age_imdb_data <- credits_title_data %>%
group_by(title, age_certification) %>%
summarize(imdb_score = mean(imdb_score, na.rm = TRUE)) %>%
arrange(desc(imdb_score))
summary_info$age_imdb_data <- age_imdb_data
# Calculate the year with the highest average IMDb score
year_avg_imdb <- credits_title_data %>%
group_by(release_year) %>%
summarize(avg_imdb_score = mean(imdb_score, na.rm = TRUE)) %>%
filter(avg_imdb_score == max(avg_imdb_score))
summary_info$year_highest_avg_IMDb <- year_avg_imdb$release_year
# Calculate the movie with the most IMDb votes
most_votes_movie <- credits_title_data %>%
filter(imdb_votes == max(imdb_votes, na.rm = TRUE)) %>%
distinct(title)
summary_info$most_votes_movie <- most_votes_movie
# Print the summary information
print(summary_info)
print(release_year_agg)
library("dplyr")
library("stringr")
library("ggplot2")
library("tidyverse")
library("scales")
# Read the csv files
credits_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/credits.csv", stringsAsFactors = FALSE)
titles_data <- read.csv("C:/Users/yosup/OneDrive/Desktop/info201/titles.csv", stringsAsFactors = FALSE)
# Join the two tables together
credits_title_data <- inner_join(titles_data, credits_data, by = "id")
# Delete the columns that are not necessary
credits_title_data <- select(credits_title_data, -description)
credits_title_data <- select(credits_title_data, -runtime)
credits_title_data <- select(credits_title_data, -genres)
credits_title_data <- select(credits_title_data, -production_countries)
credits_title_data <- select(credits_title_data, -tmdb_popularity)
credits_title_data <- select(credits_title_data, -tmdb_score)
# Create a list to store summary information
summary_info <- list()
# Calculate the movies with the highest IMDb for each year
highest_IMDb_year <- credits_title_data %>%
group_by(release_year) %>%
filter(imdb_score == max(imdb_score, na.rm = TRUE)) %>%
select(release_year, title, imdb_score) %>%
distinct()
summary_info$num_observations <- nrow(credits_title_data)
summary_info$highest_IMDb_year <- highest_IMDb_year
# Calculate the movie with the highest IMDb score
highest_IMDb_alltime <- credits_title_data %>%
filter(imdb_score == max(imdb_score, na.rm = TRUE)) %>%
select(release_year, title, imdb_score) %>%
distinct()
summary_info$highest_IMDb_alltime <- highest_IMDb_alltime
# Find the actors who acted in the highest rated IMDb movies
max_imdb_score <- max(credits_title_data$imdb_score, na.rm = TRUE)
highest_imdb_movies <- credits_title_data %>%
filter(imdb_score == max_imdb_score)
actors <- unique(highest_imdb_movies$name)
summary_info$actors_highest_IMDb <- actors
# Calculate age certification/restriction and IMDb score of movies
age_imdb_data <- credits_title_data %>%
group_by(title, age_certification) %>%
summarize(imdb_score = mean(imdb_score, na.rm = TRUE)) %>%
arrange(desc(imdb_score))
summary_info$age_imdb_data <- age_imdb_data
# Calculate the year with the highest average IMDb score
year_avg_imdb <- credits_title_data %>%
group_by(release_year) %>%
summarize(avg_imdb_score = mean(imdb_score, na.rm = TRUE)) %>%
filter(avg_imdb_score == max(avg_imdb_score))
summary_info$year_highest_avg_IMDb <- year_avg_imdb$release_year
# Calculate the movie with the most IMDb votes
most_votes_movie <- credits_title_data %>%
filter(imdb_votes == max(imdb_votes, na.rm = TRUE)) %>%
distinct(title)
summary_info$most_votes_movie <- most_votes_movie
# Print the summary information
print(summary_info)
View(most_votes_movie)
View(summary_info)
